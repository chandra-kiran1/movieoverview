{"version":3,"sources":["Moviecard.jsx","App.js","reportWebVitals.js","index.js"],"names":["Moviecard","title","poster_path","overview","vote_average","className","src","alt","App","useState","movies","setMovies","searchterm","setSearchterm","useEffect","fetch","then","res","json","data","results","onSubmit","e","preventDefault","value","onChange","target","type","placeholder","length","map","movie","key","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAuBeA,MApBf,YAA+D,IAA3CC,EAA0C,EAA1CA,MAAMC,EAAoC,EAApCA,YAAYC,EAAwB,EAAxBA,SAASC,EAAe,EAAfA,aAC3C,OACI,sBAAKC,UAAU,YAAf,UACI,qBAAKA,UAAU,mBAAf,SACA,qBAAMC,IALD,mCAKeJ,EAAaK,IAAKN,MAEtC,sBAAKI,UAAU,qBAAf,UACA,6BAAKJ,IACL,+BAAOG,OAGP,sBAAKC,UAAU,sBAAf,UACI,4CACA,4BAAIF,WCwCLK,MApDf,WACE,IAIA,EAAyBC,mBAAS,IAAlC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAoCF,mBAAS,IAA7C,mBAAOG,EAAP,KAAkBC,EAAlB,KA8BA,OA7BAC,qBAAW,WAETC,MARU,uIASTC,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACG,GAAQR,EAAUQ,EAAKC,cAE7B,IAuBK,qCACJ,iCACA,sBAAMC,SAZW,SAACC,GACpBA,EAAEC,iBACFR,MAAM,4FAAD,OAA6FH,EAA7F,YAEJI,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAACG,GAAQR,EAAUQ,EAAKC,YAC9BP,EAAc,KAMZ,SACE,uBAAOW,MAAOZ,EAAYa,SAjBX,SAACH,GACpBT,EAAcS,EAAEI,OAAOF,QAgBkCG,KAAK,OAAOC,YAAY,YAAYvB,UAAU,eAIvG,qBAAKA,UAAU,MAAf,SACGK,EAAOmB,OAAS,GAAKnB,EAAOoB,KAAI,SAACC,GAAD,OAC/B,wBAAC,EAAD,2BAAeA,GAAf,IAAsBC,IAAKD,EAAME,eCrC1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpB,MAAK,YAAkD,IAA/CqB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.c9e7f464.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Moviecard.css'\r\nconst imageapi = 'https://image.tmdb.org/t/p/w1280';\r\nfunction Moviecard({title,poster_path,overview,vote_average}) {\r\n    return (\r\n        <div className='moviecard'>\r\n            <div className='moviecard__image'>\r\n            <img  src={imageapi+poster_path} alt={title}/></div>\r\n\r\n            <div className='moviecard__details' >\r\n            <h4>{title}</h4>\r\n            <span>{vote_average}</span>\r\n            </div>\r\n            \r\n            <div className=\"moviecard__overview\">\r\n                <h2>overview :</h2>\r\n                <p>{overview}</p>\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Moviecard\r\n","import { useEffect, useState } from 'react';\nimport './App.css';\nimport Moviecard from './Moviecard';\n\nfunction App() {\n  const api = 'https://api.themoviedb.org/3/discover/movie?api_key=200f5991c35c4a76a1dcb488428b1e6e&language=en-US&sort_by=popularity.desc&page=1&'\n\n\n\n  const [movies,setMovies]=useState([]);\n  const [searchterm,setSearchterm ] = useState('');\n  useEffect( () => {\n// result();\n    fetch(api)\n    .then(res=>res.json())\n    .then((data)=>{setMovies(data.results)})\n     \n  }, [])\n  // async function result(){\n  //   const moviesres = await fetch(api);\n  //   const moviesr = await moviesres.json();\n  //   setMovies(moviesr.results)\n  //   console.log(moviesr)\n\n  // }\n  \n  const handleonchange=(e)=>{\n    setSearchterm(e.target.value)\n    \n  }\n  const handleonsubmit=(e)=>{\n    e.preventDefault();\n    fetch(`https://api.themoviedb.org/3/search/movie?api_key=200f5991c35c4a76a1dcb488428b1e6e&query=${searchterm}&page=1`\n      )\n    .then(res=>res.json())\n    .then((data)=>{setMovies(data.results)})\n    setSearchterm('');\n  }\n    \n\n  return (<>\n      <header>\n      <form onSubmit={handleonsubmit}>\n        <input value={searchterm} onChange={handleonchange}  type=\"text\" placeholder=\"search...\" className='search' />\n        </form>\n      </header>\n\n    <div className=\"App\">\n      {movies.length > 0 && movies.map((movie)=>(\n        <Moviecard {...movie} key={movie.id} />\n      ))}\n    </div>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}